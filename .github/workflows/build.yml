name: Build

on:
  push:
    paths:
      - 'src/**.md'

jobs:
  generate-matrix:
    name: Generate matrix for build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - name: Check changed files
        id: diff
        run: |
          # See https://github.community/t/check-pushed-file-changes-with-git-diff-tree-in-github-actions/17220/10
          if [ $GITHUB_BASE_REF ]; then
            # Pull Request
            git fetch origin $GITHUB_BASE_REF --depth=1
            export DIFF=$( git diff --name-only origin/$GITHUB_BASE_REF $GITHUB_SHA )
            echo "Diff between origin/$GITHUB_BASE_REF and $GITHUB_SHA"
          else
            # Push
            git fetch origin ${{ github.event.before }} --depth=1
            export DIFF=$( git diff --name-only ${{ github.event.before }} $GITHUB_SHA )
            echo "Diff between ${{ github.event.before }} and $GITHUB_SHA"
          fi
          echo "$DIFF"
          # Escape newlines (replace \n with %0A)
          echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"
      - name: Set matrix for build
        id: set-matrix
        run: |
          # See https://stackoverflow.com/a/62953566/11948346
          DIFF="${{ steps.diff.outputs.diff }}"
          JSON="{\"include\":["

          for item in $DIFF
          do
            strip_src=${item#src/}
            strip_ext=${strip_src%%.*}
            JSONline="{\"input\":\"$item\",\"output\":\"docs/$strip_ext.html\"},"
            JSON=$JSON$JSONline
          done

          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"
          echo $JSON
          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    name: Converting "${{ matrix.input }}" to "${{ matrix.output }}"
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    steps:
      # get access to git repo
      - uses: actions/checkout@v2
        name: git setup

      # we need node for linting
      - uses: actions/setup-node@v2
        name: node setup
        with:
          node-version: '14'
          cache: npm
          
      - name: clean
        run: npm cache clean --force
        
      # lint first before all the conversion overhead. fail fast
      - name: lint
        run: |
          npm install textlint
          npm install textlint-rule-no-todo
          npm install textlint-rule-alex
          npm install textlint-rule-stop-words          
          git config --global user.name 'Sam Kelley'
          git config --global user.email 'yggilabs@users.noreply.github.com'
          git commit -am "Automated build"
          git push

      - uses: docker://pandoc/latex:2.16
        name: build slides
        with:
          args: >-
            -t revealjs
            --template custom
            -o ${{ matrix.output }}
            ${{ matrix.input }}
            --slide-level 2

      - name: commit file
        run: |
          git config --global user.name 'Sam Kelley'
          git config --global user.email 'yggilabs@users.noreply.github.com'
          git add ${{ matrix.output }}
          git commit -am "Automated build"
          git push
